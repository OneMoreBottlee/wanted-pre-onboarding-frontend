{"ast":null,"code":"var _jsxFileName = \"/home/onemorebottlee/Desktop/wanted-pre-onboarding-frontend/src/pages/signin.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [validate, setValidate] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"signin\", /*#__PURE__*/_jsxDEV(\"input\", {\n      \"data-testid\": \"email-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      \"data-testid\": \"password-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-testid\": \"signin-button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n};\n_s(SignIn, \"TWGdHrdWWHioNHQ/CEPs1mNK3Z4=\");\n_c = SignIn;\nexport default SignIn;\n\n// 1. 로그인 유효성 검사\n// 1-1. 이메일 @ 포함\n// 1-2. 비밀번호 8자 이상\n// 1-3. 위 2개 통과 못할시 버튼 disabled\n\n// 2. 로그인 버튼 클릭 후 정상 로그인시 todo 로 이동\n// 2-1. 로그인 성공시 JWT를 받아 로컬 스토리지에 저장하기\n\n// 3. 리다이렉트\n// 3-1. 토큰이 있으면 todo로\n// 3-2. 토큰이 없으면 회원가입으로\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SignIn","_s","email","setEmail","password","setPassword","validate","setValidate","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/onemorebottlee/Desktop/wanted-pre-onboarding-frontend/src/pages/signin.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst SignIn = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [validate, setValidate] = useState(false);\n    \n    return <div>signin\n        <input data-testid=\"email-input\" />\n        <input data-testid=\"password-input\" />\n        <button data-testid=\"signin-button\" />\n    </div>\n}\n\nexport default SignIn;\n\n// 1. 로그인 유효성 검사\n// 1-1. 이메일 @ 포함\n// 1-2. 비밀번호 8자 이상\n// 1-3. 위 2개 통과 못할시 버튼 disabled\n\n// 2. 로그인 버튼 클릭 후 정상 로그인시 todo 로 이동\n// 2-1. 로그인 성공시 JWT를 받아 로컬 스토리지에 저장하기\n\n// 3. 리다이렉트\n// 3-1. 토큰이 있으면 todo로\n// 3-2. 토큰이 없으면 회원가입으로"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/C,oBAAOE,OAAA;IAAAS,QAAA,GAAK,QACR,eAAAT,OAAA;MAAO,eAAY;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCb,OAAA;MAAO,eAAY;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCb,OAAA;MAAQ,eAAY;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AACV,CAAC;AAAAX,EAAA,CAVKD,MAAM;AAAAa,EAAA,GAANb,MAAM;AAYZ,eAAeA,MAAM;;AAErB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}