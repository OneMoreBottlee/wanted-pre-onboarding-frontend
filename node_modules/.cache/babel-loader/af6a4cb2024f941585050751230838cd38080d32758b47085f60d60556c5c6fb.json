{"ast":null,"code":"var _jsxFileName = \"/home/onemorebottlee/Desktop/wanted-pre-onboarding-frontend/src/pages/todoPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createTodo, deleteTodo, getTodos } from \"../apis\";\nimport ToDo from \"../Components/todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoPage() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const navigate = useNavigate();\n  const token = localStorage.getItem(\"access_token\");\n  const updateList = async () => {\n    const list = await getTodos();\n    setTodoList(list);\n  };\n  const createHandler = () => {\n    return async () => {\n      const newToDo = await createTodo(newTodo);\n      console.log(newToDo);\n      setTodoList(old => [...old, newToDo]);\n    };\n  };\n  const deleteHandler = id => {\n    return async () => {\n      await deleteTodo(id);\n      const remainList = todoList.filter(todo => todo.id !== id);\n      setTodoList(remainList);\n    };\n  };\n\n  // 페이지 시작시\n  useEffect(() => {\n    // Todo 리스트 받아오기\n    token ? updateList() : navigate(\"/signin\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/\"),\n      children: \"\\uBA54\\uC778 \\uC774\\uB3D9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"To Do\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\", /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"new-todo-input\",\n        onChange: e => setNewTodo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"new-todo-add-button\",\n        onClick: createHandler,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), todoList.map(el => {\n      return /*#__PURE__*/_jsxDEV(ToDo, {\n        props: el,\n        deleteHandler: deleteHandler\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true);\n}\n_s(TodoPage, \"aIwYdRa3OvY7Cl0fvo5ZGuB9tHw=\", false, function () {\n  return [useNavigate];\n});\n_c = TodoPage;\nvar _c;\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"names":["useEffect","useState","useNavigate","createTodo","deleteTodo","getTodos","ToDo","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoPage","_s","todoList","setTodoList","newTodo","setNewTodo","navigate","token","localStorage","getItem","updateList","list","createHandler","newToDo","console","log","old","deleteHandler","id","remainList","filter","todo","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","el","props","_c","$RefreshReg$"],"sources":["/home/onemorebottlee/Desktop/wanted-pre-onboarding-frontend/src/pages/todoPage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createTodo, deleteTodo, getTodos, updateTodo } from \"../apis\";\nimport ToDo from \"../Components/todo\";\n\nexport default function TodoPage() {\n    const [todoList, setTodoList] = useState<TodoListData[]>([])\n    const [newTodo, setNewTodo] = useState(\"\")\n    const navigate = useNavigate()\n    const token = localStorage.getItem(\"access_token\")\n\n    const updateList = async () => {\n        const list = await getTodos()\n        setTodoList(list)\n    }\n\n    const createHandler = () => {\n        return async () => {\n            const newToDo = await createTodo(newTodo)\n            console.log(newToDo)\n            setTodoList((old) => [...old, newToDo])\n        }\n    }\n\n    const deleteHandler = (id: number) => {\n        return async () => {\n            await deleteTodo(id)\n            const remainList = todoList.filter(todo => todo.id !== id)\n            setTodoList(remainList)}\n    }\n\n    // 페이지 시작시\n    useEffect(() => {\n        // Todo 리스트 받아오기\n        token ? updateList() : navigate(\"/signin\")\n    }, [])\n\n    return (\n        <>\n            <button onClick={() => navigate(\"/\")}>메인 이동</button>\n            <form>To Do를 입력하세요\n                <input data-testid=\"new-todo-input\" onChange={(e) => setNewTodo(e.target.value)} />\n                <button data-testid=\"new-todo-add-button\" onClick={createHandler}>추가</button>\n            </form>\n            <div>To Do List</div>\n            {todoList.map(el => {\n                return <ToDo key={el.id} props={el} deleteHandler={deleteHandler} />\n            })}\n        </>\n    )\n}\n\nexport interface TodoListData {\n    id: number;\n    todo: string;\n    isCompleted: boolean;\n    userId: number;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}